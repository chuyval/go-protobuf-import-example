// Code generated by protoc-gen-go. DO NOT EDIT.
// source: my.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	v1 "k8s.io/api/core/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Info struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pod                  *v1.Pod  `protobuf:"bytes,3,opt,name=pod,proto3" json:"pod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5798dc1fd57a96, []int{0}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Info) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Info) GetPod() *v1.Pod {
	if m != nil {
		return m.Pod
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5798dc1fd57a96, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Info)(nil), "Info")
	proto.RegisterType((*Empty)(nil), "Empty")
}

func init() { proto.RegisterFile("my.proto", fileDescriptor_2a5798dc1fd57a96) }

var fileDescriptor_2a5798dc1fd57a96 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8e, 0xb1, 0x4b, 0xc5, 0x30,
	0x10, 0x87, 0x6d, 0x5e, 0xdf, 0xab, 0x9e, 0xe0, 0x90, 0xc5, 0xd0, 0xe9, 0x91, 0xe9, 0xb9, 0x5c,
	0x68, 0x5d, 0x9c, 0x45, 0x11, 0x37, 0xe9, 0xa8, 0x53, 0x6a, 0xce, 0x12, 0x24, 0xbd, 0xd0, 0x86,
	0x42, 0xff, 0x7b, 0x69, 0x8a, 0xe3, 0x77, 0xf7, 0xc1, 0xf7, 0x83, 0xeb, 0xb0, 0x62, 0x9c, 0x38,
	0x71, 0xad, 0x7f, 0x9f, 0x66, 0xf4, 0x6c, 0x6c, 0xf4, 0xe6, 0x9b, 0x27, 0x32, 0x4b, 0x63, 0x06,
	0x1a, 0x69, 0xb2, 0x89, 0xdc, 0xee, 0xe8, 0x2f, 0x28, 0xdf, 0xc7, 0x1f, 0x96, 0x77, 0x20, 0xbc,
	0x53, 0xc5, 0xb9, 0xb8, 0xdc, 0x74, 0xc2, 0x3b, 0xa9, 0xa0, 0x0a, 0x34, 0xcf, 0x76, 0x20, 0x25,
	0xf2, 0xf1, 0x1f, 0xe5, 0x03, 0x1c, 0x22, 0x3b, 0x75, 0x38, 0x17, 0x97, 0xdb, 0xf6, 0x1e, 0xf7,
	0x06, 0xda, 0xe8, 0x71, 0x6b, 0xe0, 0xd2, 0xe0, 0x07, 0xbb, 0x6e, 0x73, 0x74, 0x05, 0xc7, 0xd7,
	0x10, 0xd3, 0xda, 0x6a, 0x28, 0x5f, 0x28, 0xb0, 0xac, 0xa1, 0x7a, 0xa3, 0x94, 0x83, 0x27, 0xcc,
	0xaf, 0xfa, 0x88, 0x1b, 0xea, 0xab, 0xe7, 0xf2, 0x53, 0xc4, 0xbe, 0x3f, 0xe5, 0x59, 0x8f, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xcd, 0x24, 0x56, 0xc6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoClient is the client API for Demo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoClient interface {
	GetInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Info, error)
}

type demoClient struct {
	cc *grpc.ClientConn
}

func NewDemoClient(cc *grpc.ClientConn) DemoClient {
	return &demoClient{cc}
}

func (c *demoClient) GetInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/Demo/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoServer is the server API for Demo service.
type DemoServer interface {
	GetInfo(context.Context, *Empty) (*Info, error)
}

// UnimplementedDemoServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServer struct {
}

func (*UnimplementedDemoServer) GetInfo(ctx context.Context, req *Empty) (*Info, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterDemoServer(s *grpc.Server, srv DemoServer) {
	s.RegisterService(&_Demo_serviceDesc, srv)
}

func _Demo_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Demo/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServer).GetInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Demo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Demo",
	HandlerType: (*DemoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Demo_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "my.proto",
}
